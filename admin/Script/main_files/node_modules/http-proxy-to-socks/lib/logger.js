'use strict';

var winston = require('winston');
var chalk = require('chalk');

var format = winston.format,
    createWinstonLogger = winston.createLogger,
    transports = winston.transports;
var Console = transports.Console;
var combine = format.combine,
    printf = format.printf;


var DEFAULT_COMMON_OPTIONS = {
  colorize: true,
  timestamp: true
};

function fillDigit(num) {
  var str = String(num);
  if (str.length === 1) {
    return '0' + str;
  }

  return str;
}

function getFormatedDate() {
  var date = new Date();

  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + (' ' + fillDigit(date.getHours()) + ':' + fillDigit(date.getMinutes())) + (':' + fillDigit(date.getSeconds()));
}

function createTransports() {
  return [new Console(Object.assign({}, DEFAULT_COMMON_OPTIONS))];
}

function colorLevel(str) {
  if (str === 'error') {
    return chalk.red(str);
  } else if (str === 'info') {
    return chalk.green(str);
  }

  return str;
}

function createLogger() {
  var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'warn';

  return createWinstonLogger({
    format: combine(printf(function (info) {
      return getFormatedDate() + ' - ' + colorLevel(info.level) + ' ' + info.message;
    })),
    level: level,
    transports: createTransports()
  });
}

function changeLevel(logger, level) {
  logger.configure({
    level: level,
    transports: createTransports()
  });
}

var logger = createLogger();

module.exports = {
  logger: logger,
  createLogger: createLogger,
  changeLevel: changeLevel
};